{"version":3,"sources":["todosList.js","components/Todoitem.js","components/Itemcreator.js","components/summaryItems.js","App.js","serviceWorker.js","index.js"],"names":["todos","todoId","todoText","todoStatus","Todoitem","props","react_default","a","createElement","className","prom","type","key","checked","onChange","checkedItem","onClick","removeItem","Itemcreator","onSubmit","this","createItem","name","React","Component","summaryItems","count","setDefault","checkedCount","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_ref","asyncToGenerator","regenerator_default","mark","_callee","event","target","nextId","wrap","_context","prev","next","preventDefault","elements","todoItem","value","length","state","setState","concat","todoChecked","stop","_x","apply","arguments","TodosList","default","bind","assertThisInitialized","pervState","map","todo","promState","newTodos","push","x","todoItems","components_Todoitem","components_Itemcreator","components_summaryItems","getCheckedCount","Boolean","window","location","hostname","match","rootElement","document","getElementById","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2990da8.chunk.js","sourcesContent":["const todos = [\r\n    {\r\n      todoId: 1,\r\n      todoText: \"Task 1\",\r\n      todoStatus: true\r\n    },\r\n    {\r\n      todoId: 2,\r\n      todoText: \"Task 2\",\r\n      todoStatus: false\r\n    },\r\n    {\r\n      todoId: 3,\r\n      todoText: \"Task 3\",\r\n      todoStatus: true\r\n    },\r\n    {\r\n      todoId: 4,\r\n      todoText: \"Task 4\",\r\n      todoStatus: false\r\n    },\r\n    {\r\n      todoId: 5,\r\n      todoText: \"Task 5\",\r\n      todoStatus: false\r\n    }\r\n  ];\r\n  \r\n  export default todos;\r\n  ","import React from \"react\";\r\n\r\nconst Todoitem = props => (\r\n  <div className={props.prom.todoStatus ? \"todoItem checked\" : \"todoItem\"}>\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        key={props.prom.todoId}\r\n        checked={props.prom.todoStatus ? \"checked\" : \"\"}\r\n        onChange={() => props.checkedItem(props.prom.todoId)}\r\n      />\r\n      {props.prom.todoText}\r\n    </label>\r\n    <button\r\n      className=\"remove\"\r\n      onClick={() => props.removeItem(props.prom.todoId)}\r\n    >\r\n      x\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Todoitem;\r\n","import React from \"react\";\r\n\r\nclass Itemcreator extends React.Component {\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.createItem}>\r\n        <input type=\"text\" name=\"todoItem\" />\r\n        <button>Add item</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Itemcreator;\r\n","import React from \"react\";\r\n\r\nconst summaryItems = props => {\r\n  return (\r\n    <div>\r\n      <span> Total: {props.count} item(s)</span>\r\n      <button onClick={() => props.setDefault(\"all\")}>all</button>\r\n      <button onClick={() => props.setDefault(\"active\")}>active</button>\r\n      <button onClick={() => props.setDefault(\"archive\")}>archive</button>\r\n      <span> Done: {props.checkedCount} item(s)</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default summaryItems;\r\n","import React from 'react';\r\nimport TodosList from \"./todosList.js\";\r\nimport Todoitem from \"./components/Todoitem.js\";\r\nimport Itemcreator from \"./components/Itemcreator\";\r\nimport SummaryItems from \"./components/summaryItems.js\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      todos: TodosList,\r\n      default: \"all\"\r\n    };\r\n    this.checkedItem = this.checkedItem.bind(this);\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.setDefault = this.setDefault.bind(this);\r\n    // this.getCheckedCount = this.getCheckedCount.bind(this)\r\n  }\r\n  checkedItem(todoId) {\r\n    this.setState(pervState => {\r\n      const newTodosList = pervState.todos.map(todo => {\r\n        if (todo.todoId === todoId) {\r\n          todo.todoStatus = todo.todoStatus ? false : true;\r\n        }\r\n        return todo;\r\n      });\r\n      return {\r\n        todos: newTodosList\r\n      };\r\n    });\r\n  }\r\n\r\n  createItem = async event => {\r\n    event.preventDefault();\r\n    const target = event.target;\r\n    const todoText = target.elements.todoItem.value;\r\n    if (todoText.length > 0) {\r\n      target.elements.todoItem.value = \"\";\r\n      const nextId = this.state.todos.length;\r\n      this.setState({\r\n        todos: this.state.todos.concat({\r\n          todoId: nextId + 1,\r\n          todoText: todoText,\r\n          todoChecked: false\r\n        })\r\n      });\r\n    }\r\n  };\r\n\r\n  removeItem(todoId) {\r\n    this.setState(promState => {\r\n      let newTodos = [];\r\n      for (let key in promState.todos) {\r\n        if (promState.todos[key].todoId !== todoId) {\r\n          newTodos.push(promState.todos[key]);\r\n        }\r\n      }\r\n      return {\r\n        todos: newTodos\r\n      };\r\n    });\r\n  }\r\n\r\n  getCheckedCount() {\r\n    var count = 0;\r\n    for (let x in this.state.todos) {\r\n      if (this.state.todos[x].todoStatus) {\r\n        count++;\r\n      }\r\n    }\r\n\r\n    return count;\r\n  }\r\n\r\n  setDefault(value) {\r\n    this.setState(promState => {\r\n      return {\r\n        default: value\r\n      };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // const todoItems = this.state.todos.map(todo => (\r\n    //   <Todoitem\r\n    //     key={todo.todoId}\r\n    //     todos={todo}\r\n    //     checkedItem={this.checkedItem}\r\n    //     removeItem={this.removeItem}\r\n    //   />\r\n    // ));\r\n\r\n    var todoItems = [];\r\n\r\n    for (let x in this.state.todos) {\r\n      if (this.state.default === \"all\") {\r\n        todoItems.push(\r\n          <Todoitem\r\n            key={this.state.todos[x].todoId}\r\n            prom={this.state.todos[x]}\r\n            checkedItem={this.checkedItem}\r\n            removeItem={this.removeItem}\r\n          />\r\n        );\r\n      } else if (\r\n        this.state.default === \"active\" &&\r\n        !this.state.todos[x].todoStatus\r\n      ) {\r\n        todoItems.push(\r\n          <Todoitem\r\n            key={this.state.todos[x].todoId}\r\n            prom={this.state.todos[x]}\r\n            checkedItem={this.checkedItem}\r\n            removeItem={this.removeItem}\r\n          />\r\n        );\r\n      } else if (\r\n        this.state.default === \"archive\" &&\r\n        this.state.todos[x].todoStatus\r\n      ) {\r\n        todoItems.push(\r\n          <Todoitem\r\n            key={this.state.todos[x].todoId}\r\n            prom={this.state.todos[x]}\r\n            checkedItem={this.checkedItem}\r\n            removeItem={this.removeItem}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>todos</h1>\r\n        <Itemcreator createItem={this.createItem} />\r\n        {todoItems}\r\n        <SummaryItems\r\n          count={this.state.todos.length}\r\n          checkedCount={this.getCheckedCount()}\r\n          setDefault={this.setDefault}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}